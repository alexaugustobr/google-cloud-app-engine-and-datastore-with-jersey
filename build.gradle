// Copyright 2017 Google Inc.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//        http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
// [START gradle]

buildscript {
  ext.kotlin_version = '1.3.72'    // Configuration for building
  repositories {
    jcenter()    // Bintray's repository - a fast Maven Central mirror & more
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.appengine:gradle-appengine-plugin:+'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"    // latest App Engine Gradle tasks
  }
}

plugins {
  id 'java'
  id 'war'
  id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.20'
  id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

repositories {   // repositories for Jar's you access in your code
  mavenCentral()
  jcenter()
}

sourceSets {
  main.kotlin.srcDirs += 'src/main/kotlin'
  main.java.srcDirs += 'src/main/java'
}

apply plugin: 'java'                              // standard Java tasks
apply plugin: 'kotlin'
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'appengine'  // App Engine tasks

ext{
  jerseyVersion = '2.25.1'
  appengineVersion = '1.9.73'
}

//apply from: './dependencies.gradle'
dependencies {
  appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.53'

  compile 'com.google.appengine:appengine-api-1.0-sdk:+'  // Latest App Engine Api's
  providedCompile 'javax.servlet:javax.servlet-api:3.1.0'

  compile 'jstl:jstl:1.2'

// Add your dependencies here.
//  compile 'com.google.cloud:google-cloud:+'   // Latest Cloud API's http://googlecloudplatform.github.io/google-cloud-java

  testCompile 'junit:junit:4.12'
  testCompile 'com.google.truth:truth:0.33'
  testCompile 'org.mockito:mockito-all:1.10.19'

  testCompile 'com.google.appengine:appengine-testing:+'
  testCompile 'com.google.appengine:appengine-api-stubs:+'
  testCompile 'com.google.appengine:appengine-tools-sdk:+'
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

  compile "com.google.appengine:appengine-api-1.0-sdk:${appengineVersion}"
  compile "javax.servlet:servlet-api:2.5"
  compile "jstl:jstl:1.2"
  compile "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
  compile "org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}"
  compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
  compile "com.google.inject:guice:4.0"
  compile "com.google.inject.extensions:guice-servlet:4.0"
  compile "org.glassfish.hk2:guice-bridge:2.4.0-b31"
  testCompile "junit:junit:4.10"
  testCompile "org.mockito:mockito-all:1.9.0"
  testCompile "com.google.appengine:appengine-testing:${appengineVersion}"
  testCompile "com.google.appengine:appengine-api-stubs:${appengineVersion}"
}

// Always run unit tests
appengineUpdate.dependsOn test
appengineStage.dependsOn test

// [START model]
appengine {  // App Engine tasks configuration
  downloadSdk = true
  jvmFlags = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000']
}


test {
  useJUnit()
  testLogging.showStandardStreams = true
  beforeTest { descriptor ->
     logger.lifecycle("test: " + descriptor + "  Running")
  }

  onOutput { descriptor, event ->
     logger.lifecycle("test: " + descriptor + ": " + event.message )
  }
  afterTest { descriptor, result ->
    logger.lifecycle("test: " + descriptor + ": " + result )
  }
}
// [END model]

group   = "com.example.appengine_standard_java8"        // Generated output GroupId
version = "1.0-SNAPSHOT"        // Version in generated output

sourceCompatibility = 1.8     // App Engine Flexible uses Java 8
targetCompatibility = 1.8
compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}
compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}     // App Engine Flexible uses Java 8
// [END gradle]
